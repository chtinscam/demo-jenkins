spring:
  redis:
    host: localhost
    port: 6379
    password: P@ssword123
    timeout: 10000    
    jedis:
      pool:
        max-idle: 100 # max idle connections in the pool
        max-wait: 30000 # time limit to get a connection - only applies if maxActive is finite
        min-idle: 0 # min idle connections in the pool
 
  config:
    location: classpath:/config/
  jackson:
    date-format: "yyyy-MM-dd'T'HH:mm:ssZ"
    time-zone: "Asia/Saigon"
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  data:
    rest:
      basePath: /test
    elasticsearch:
      properties:
        host: localhost
        port: 9300
      cluster-nodes: http://localhost:9300
      cluster-name: elasticsearch
      repositories:
        enabled: true
    jpa:
      repositories:
        enabled: false
#Cache expire time.
cacheManager:
 redisExpiredTime: 3600000         
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
intergrate:
  apiHub: http://ec2-18-136-221-21.ap-southeast-1.compute.amazonaws.com/DLI-DEV-IHUB/api
  
  agent: http://CSCVIEAI381411:9090/ihub/api/SalesAgentEnquiryService/{type}/{id}
  policyHolder: https://ec2-52-220-161-231.ap-southeast-1.compute.amazonaws.com/GGI_LIFE_FT_IHUB/api/PolicyCheckService
  getListPolicyUri: https://ec2-52-220-108-251.ap-southeast-1.compute.amazonaws.com/DAIICHI-IHUB/api/PolicyEnquiryService
  listClientById: http://CSCVIEAI381411:9090/ihub/api/ClientEnquiryService 
  getClientDetailUri: https://ec2-52-220-161-231.ap-southeast-1.compute.amazonaws.com/GGI_LIFE_FT_IHUB/api/ClientDetailService/{type}/{id}
  policyDetail: https://ec2-52-220-161-231.ap-southeast-1.compute.amazonaws.com/GGI_LIFE_FT_IHUB/api/PolicyDetailService/{contractNumber}
  agentCodeValidation: http://ec2-18-136-221-21.ap-southeast-1.compute.amazonaws.com/DLI-DEV-IHUB/api/IsValidAgentIdINGService 
#  policyDetail: http://CSCVIEAI381411:9090/ihub/api/PolicyDetailService/{contractNumber}  
security:
  oauth2:
    resource:
      userInfoUri: http://localhost:9999/ife-infra-oauth2/user
      additionalUri: http://localhost:9999/ife-infra-oauth2/oauth/{token}/get/additionalInfo 
      
vpms:
  server:
    uri: http://ec2-18-136-45-157.ap-southeast-1.compute.amazonaws.com/vpms/v1/rest/exec/9130
    fileName: account-user.vpm
    mappingFileName: config/account.mapping

# Micro Service Group IDs
microservices:
  gatewayServiceId: api-management
  optServiceId: otp-management
  notificationServiceId: notification-management
  
authentication:
  oauth2:
    clientid: uic-web
    secret: uicsecret
    server: http://localhost:9999
    credential:
      url: /ife-infra-oauth2/oauth/token?grant_type=client_credentials

# Ldap directory config
ldap:
  server:
    uri: ldap://localhost:10389    
    baseDn: uid=admin,ou=system
    password: secret
computeRuntime : 1

# Is check password pattern
isCheckPassword: false

# Is check agent ID
isCheckAgent: false

calc:
  server:
    uri: http://ec2-18-139-187-180.ap-southeast-1.compute.amazonaws.com/PX_Calculator
    
resource:
  login:
    url: http://localhost:18080/AgencySales/
  remoteSign:
    url: http://localhost:18080/AgencySales/requestEsignature
